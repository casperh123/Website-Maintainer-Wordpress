@using Microsoft.EntityFrameworkCore
@using Radzen.Blazor.Rendering
@using WebsiteMaintainer.Core.Entities
@using WebsiteMaintainer.Infrastructure.Services
@using WebsiteMaintainer.Web.Components.Cards
@using WebsiteMaintainer.Web.Components.Badge
@using WebsiteMaintainer.Web.Services
@inject IEnhanceService EnhanceService
@inject IUserService UserService

<RadzenStack Style="margin: 20px 0">
    
    <RadzenDataGrid Data="Plugins.AsQueryable()"
                    AllowSorting="true" 
                    PageSize="10" 
                    AllowPaging="true" 
                    PagerHorizontalAlign="HorizontalAlign.Left" 
                    ShowPagingSummary="true"
                    PageSizeOptions="@_pageSizes">
        
        <Columns>
            <RadzenDataGridColumn Property="@nameof(Plugin.Name)" Title="Name" Filterable="true">
                <Template Context="plugin">
                    <RadzenText TextStyle="TextStyle.Subtitle1">
                        @plugin.Name
                    </RadzenText>
                    <RadzenRow>
                        <PluginStatusBadge PluginStatus="plugin.Status"/>
                        
                        @if (plugin.UpdateAvailable)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Warning">
                                Update Available
                            </RadzenBadge>
                        }
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="@nameof(Plugin.Version)" Title="Plugin Version"/>
            <RadzenDataGridColumn Property="@nameof(Plugin.UpdateAvailable)" Title="Update" Filterable="true" 
                                  TextAlign="TextAlign.Center">
                <Template Context="plugin">
                    <ErrorBoundary>
                        <ChildContent>
                            @if (plugin.UpdateAvailable)
                            {
                            <RadzenButton Click="() => UpdateWebsite(plugin)">
                                Update
                            </RadzenButton>
                            }
                        </ChildContent>
                        <ErrorContent>
                            <RadzenBadge BadgeStyle="BadgeStyle.Warning">
                                An error happened while updating the plugin
                            </RadzenBadge>
                        </ErrorContent>
                    </ErrorBoundary>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    [Parameter]
    public Website Website { get; set; }
    
    [Parameter] 
    public List<Plugin> Plugins { get; set; }

    private int[] _pageSizes = [5, 10, 25, 50, 100,];

    private async Task UpdateWebsite(Plugin plugin)
    {
        ApplicationUser user = await UserService.GetCurrentUserAsync();

        await EnhanceService.UpdatePlugin(user, Website, plugin);
    }
}
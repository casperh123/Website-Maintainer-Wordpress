@page "/enhance-maintenance"
@using WebsiteMaintainer.Core.Entities
@using Microsoft.AspNetCore.Authorization
@using WebsiteMaintainer.Web.Components.Cards
@using WebsiteMaintainer.Web.Components.SiteSelectors
@using WebsiteMaintainer.Core.Repository
@using WebsiteMaintainer.Web.Services
@using WebsiteMaintainer.Web.Components.Button
@inject IUserService UserService
@inject IWebsiteRepository WebsiteRepository

@attribute [Authorize]

<RadzenStack Gap="20px">
    <RadzenText TextStyle="TextStyle.H1">Enhance Website Maintenance Panel</RadzenText>

    <RadzenText TextStyle="TextStyle.H2" >
        <RadzenHeading >Websites</RadzenHeading>
        
        <ToggleButton Toggler="_addWebsites" OnText="Close" OffText="Add Websites"></ToggleButton>
    </RadzenText>

    <EnhanceSiteSelector ExistingWebsites="_websites" WebsiteAdded="@WebsiteChanged" Showing="_addWebsites"/>

    <RadzenStack  Gap="10px" Orientation="Orientation.Vertical">
        @foreach (Website website in _websites)
        {
            <WebsiteCard Website="@website" WebsiteChanged="@WebsiteChanged"/>
        }
    </RadzenStack>
</RadzenStack>

@code {
    private List<Website> _websites;
    private bool _addWebsites;
    
    protected override async Task OnInitializedAsync()
    {
        _websites = await WebsiteRepository.GetAllAsync();
        _addWebsites = !_websites.Any();
    }

    private async Task WebsiteChanged(Website website)
    {
        if (website.MaintenanceType is MaintenanceType.None)
        {
            await WebsiteRepository.Delete(website);
            _websites.Remove(website);
        }
        else
        {
            await WebsiteRepository.AddOrUpdate(website);
            
            if (!_websites.Contains(website))
            {
                _websites.Add(website);
            }
        }
    }
}
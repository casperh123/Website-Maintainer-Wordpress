@using WebsiteMaintainer.Core.Entities
@using WebsiteMaintainer.Web.Components.Cards
@using WebsiteMaintainer.Web.Services
@inject IUserService UserService

<RadzenStack Gap="10px" Orientation="Orientation.Vertical">
    @if (_filteredWebsites is null)
    {
        <RadzenText>
            Loading...
        </RadzenText>
    }
    @if (!_filteredWebsites.Any())
    {
        <p>No websites found.</p>
    }
    else
    {
        @foreach (Website website in _filteredWebsites)
        {
            <PreviewCard Website="@website" WebsiteAdded="@AddWebsite"/>
        }
    }
</RadzenStack>


@code {
    [Parameter] 
    public List<Website> ExistingWebsites { get; set; }

    [Parameter]
    public List<Website> EnhanceWebsites { get; set; }

    [Parameter] 
    public EventCallback<Website> WebsiteAdded { get; set; }

    private List<Website> _filteredWebsites;

    protected override async void OnParametersSet()
    {
        FilterWebsites();
        await InvokeAsync(StateHasChanged);
    }

    private async Task AddWebsite(Website website)
    {
        await WebsiteAdded.InvokeAsync(website);
    }

    private void FilterWebsites()
    {
        _filteredWebsites = EnhanceWebsites
            .Where(website => !ExistingWebsites.Contains(website))
            .ToList();
    }

}
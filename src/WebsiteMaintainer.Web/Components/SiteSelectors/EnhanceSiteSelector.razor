@using WebsiteMaintainer.Core.Entities
@using WebsiteMaintainer.Web.Components.Cards
@using WebsiteMaintainer.Web.Services
@inject IUserService UserService

<RadzenStack Gap="10px" Orientation="Orientation.Vertical">
    @if (FilteredWebsites is null)
    {
        <RadzenText>
            Loading...
        </RadzenText>
    }
    @if (!FilteredWebsites.Any())
    {
        <p>No websites found.</p>
    }
    else
    {
        @foreach (Website website in FilteredWebsites)
        {
            <PreviewCard Website="website" WebsiteAdded="AddWebsite"/>
        }
    }
</RadzenStack>

@code {
    [Parameter] 
    public required List<Website> Websites { get; set; }

    [Parameter] 
    public EventCallback<List<Website>> WebsitesChanged { get; set; }

    [Parameter]
    public required List<Website> EnhanceWebsites { get; set; }

    private IEnumerable<Website> FilteredWebsites => EnhanceWebsites
        .Where(website => !Websites.Contains(website));

    private async Task AddWebsite(Website website)
    {
        Websites.Add(website);
        await WebsitesChanged.InvokeAsync(Websites);
    }
}
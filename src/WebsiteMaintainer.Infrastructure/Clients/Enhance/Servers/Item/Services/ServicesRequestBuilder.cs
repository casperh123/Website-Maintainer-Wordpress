// <auto-generated/>
#pragma warning disable CS0618
using Enhance.Client.Servers.Item.Services.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Enhance.Client.Servers.Item.Services
{
    /// <summary>
    /// Builds and executes requests for operations under \servers\{server_id}\services
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class ServicesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Enhance.Client.servers.item.services.item collection</summary>
        /// <param name="position">The UUID of the service</param>
        /// <returns>A <see cref="global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder"/></returns>
        public global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("service_id", position);
                return new global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the Enhance.Client.servers.item.services.item collection</summary>
        /// <param name="position">The UUID of the service</param>
        /// <returns>A <see cref="global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("service_id", position);
                return new global::Enhance.Client.Servers.Item.Services.Item.WithService_ItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Servers.Item.Services.ServicesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServicesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/servers/{server_id}/services", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Servers.Item.Services.ServicesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServicesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/servers/{server_id}/services", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Enhance.Client.Branding;
using Enhance.Client.Client_ip;
using Enhance.Client.Dns;
using Enhance.Client.EmailClient;
using Enhance.Client.Emails;
using Enhance.Client.Install;
using Enhance.Client.Invites;
using Enhance.Client.Licence;
using Enhance.Client.Login;
using Enhance.Client.Logins;
using Enhance.Client.Migrations;
using Enhance.Client.Orgs;
using Enhance.Client.Reports;
using Enhance.Client.Servers;
using Enhance.Client.Settings;
using Enhance.Client.Status;
using Enhance.Client.Utils;
using Enhance.Client.V2;
using Enhance.Client.VersionNamespace;
using Enhance.Client.Websites;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Enhance.Client
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class EnhanceClient : BaseRequestBuilder
    {
        /// <summary>The branding property</summary>
        public global::Enhance.Client.Branding.BrandingRequestBuilder Branding
        {
            get => new global::Enhance.Client.Branding.BrandingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The client_ip property</summary>
        public global::Enhance.Client.Client_ip.Client_ipRequestBuilder Client_ip
        {
            get => new global::Enhance.Client.Client_ip.Client_ipRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The dns property</summary>
        public global::Enhance.Client.Dns.DnsRequestBuilder Dns
        {
            get => new global::Enhance.Client.Dns.DnsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The emailClient property</summary>
        public global::Enhance.Client.EmailClient.EmailClientRequestBuilder EmailClient
        {
            get => new global::Enhance.Client.EmailClient.EmailClientRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The emails property</summary>
        public global::Enhance.Client.Emails.EmailsRequestBuilder Emails
        {
            get => new global::Enhance.Client.Emails.EmailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The install property</summary>
        public global::Enhance.Client.Install.InstallRequestBuilder Install
        {
            get => new global::Enhance.Client.Install.InstallRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invites property</summary>
        public global::Enhance.Client.Invites.InvitesRequestBuilder Invites
        {
            get => new global::Enhance.Client.Invites.InvitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The licence property</summary>
        public global::Enhance.Client.Licence.LicenceRequestBuilder Licence
        {
            get => new global::Enhance.Client.Licence.LicenceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public global::Enhance.Client.Login.LoginRequestBuilder Login
        {
            get => new global::Enhance.Client.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The logins property</summary>
        public global::Enhance.Client.Logins.LoginsRequestBuilder Logins
        {
            get => new global::Enhance.Client.Logins.LoginsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The migrations property</summary>
        public global::Enhance.Client.Migrations.MigrationsRequestBuilder Migrations
        {
            get => new global::Enhance.Client.Migrations.MigrationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The orgs property</summary>
        public global::Enhance.Client.Orgs.OrgsRequestBuilder Orgs
        {
            get => new global::Enhance.Client.Orgs.OrgsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reports property</summary>
        public global::Enhance.Client.Reports.ReportsRequestBuilder Reports
        {
            get => new global::Enhance.Client.Reports.ReportsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The servers property</summary>
        public global::Enhance.Client.Servers.ServersRequestBuilder Servers
        {
            get => new global::Enhance.Client.Servers.ServersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The settings property</summary>
        public global::Enhance.Client.Settings.SettingsRequestBuilder Settings
        {
            get => new global::Enhance.Client.Settings.SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The status property</summary>
        public global::Enhance.Client.Status.StatusRequestBuilder Status
        {
            get => new global::Enhance.Client.Status.StatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The utils property</summary>
        public global::Enhance.Client.Utils.UtilsRequestBuilder Utils
        {
            get => new global::Enhance.Client.Utils.UtilsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The v2 property</summary>
        public global::Enhance.Client.V2.V2RequestBuilder V2
        {
            get => new global::Enhance.Client.V2.V2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The version property</summary>
        public global::Enhance.Client.VersionNamespace.VersionRequestBuilder Version
        {
            get => new global::Enhance.Client.VersionNamespace.VersionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The websites property</summary>
        public global::Enhance.Client.Websites.WebsitesRequestBuilder Websites
        {
            get => new global::Enhance.Client.Websites.WebsitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.EnhanceClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EnhanceClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class Member : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The avatarPath property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AvatarPath { get; set; }
#nullable restore
#else
        public string AvatarPath { get; set; }
#endif
        /// <summary>The colorCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ColorCode { get; set; }
#nullable restore
#else
        public string ColorCode { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The isActive property</summary>
        public bool? IsActive { get; set; }
        /// <summary>The joinedAt property</summary>
        public Date? JoinedAt { get; set; }
        /// <summary>The loginId property</summary>
        public Guid? LoginId { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The notifications configured for this member.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Notifications { get; set; }
#nullable restore
#else
        public List<string> Notifications { get; set; }
#endif
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Enhance.Client.Models.Role?>? Roles { get; set; }
#nullable restore
#else
        public List<global::Enhance.Client.Models.Role?> Roles { get; set; }
#endif
        /// <summary>This field is only present if member has &quot;SiteAccess&quot; role. In this case, the list contains the ids of the websites to which member has access.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SiteAccesses { get; set; }
#nullable restore
#else
        public List<string> SiteAccesses { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.Member"/> and sets the default values.
        /// </summary>
        public Member()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.Member"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.Member CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.Member();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "avatarPath", n => { AvatarPath = n.GetStringValue(); } },
                { "colorCode", n => { ColorCode = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "isActive", n => { IsActive = n.GetBoolValue(); } },
                { "joinedAt", n => { JoinedAt = n.GetDateValue(); } },
                { "loginId", n => { LoginId = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "notifications", n => { Notifications = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "roles", n => { Roles = n.GetCollectionOfEnumValues<global::Enhance.Client.Models.Role>()?.AsList(); } },
                { "siteAccesses", n => { SiteAccesses = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("avatarPath", AvatarPath);
            writer.WriteStringValue("colorCode", ColorCode);
            writer.WriteStringValue("email", Email);
            writer.WriteGuidValue("id", Id);
            writer.WriteBoolValue("isActive", IsActive);
            writer.WriteDateValue("joinedAt", JoinedAt);
            writer.WriteGuidValue("loginId", LoginId);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfPrimitiveValues<string>("notifications", Notifications);
            writer.WriteCollectionOfEnumValues<global::Enhance.Client.Models.Role>("roles", Roles);
            writer.WriteCollectionOfPrimitiveValues<string>("siteAccesses", SiteAccesses);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

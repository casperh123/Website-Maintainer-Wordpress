// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class BackupRestoreOptions : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Restore all the mailboxes from this backup.  Overrides the `restoreEmails` property.</summary>
        public bool? RestoreAllEmails { get; set; }
        /// <summary>The list of databases names that need to be restored. If this list is not specified all the databases found in the backup snapshot will be restored, otherwise if this list is specified as empty, no database will be restored.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RestoreDatabases { get; set; }
#nullable restore
#else
        public List<string> RestoreDatabases { get; set; }
#endif
        /// <summary>The restoreEmails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RestoreEmails { get; set; }
#nullable restore
#else
        public List<string> RestoreEmails { get; set; }
#endif
        /// <summary>If set to false, the backup restoration will not include the website home directory.</summary>
        public bool? RestoreFiles { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.BackupRestoreOptions"/> and sets the default values.
        /// </summary>
        public BackupRestoreOptions()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.BackupRestoreOptions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.BackupRestoreOptions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.BackupRestoreOptions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "restoreAllEmails", n => { RestoreAllEmails = n.GetBoolValue(); } },
                { "restoreDatabases", n => { RestoreDatabases = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "restoreEmails", n => { RestoreEmails = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "restoreFiles", n => { RestoreFiles = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("restoreAllEmails", RestoreAllEmails);
            writer.WriteCollectionOfPrimitiveValues<string>("restoreDatabases", RestoreDatabases);
            writer.WriteCollectionOfPrimitiveValues<string>("restoreEmails", RestoreEmails);
            writer.WriteBoolValue("restoreFiles", RestoreFiles);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

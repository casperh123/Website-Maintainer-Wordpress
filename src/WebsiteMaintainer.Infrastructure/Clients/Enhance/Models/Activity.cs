// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class Activity : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activityObject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Enhance.Client.Models.ActivityObject? ActivityObject { get; set; }
#nullable restore
#else
        public global::Enhance.Client.Models.ActivityObject ActivityObject { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The context property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Enhance.Client.Models.ActivityContext? Context { get; set; }
#nullable restore
#else
        public global::Enhance.Client.Models.ActivityContext Context { get; set; }
#endif
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>Different activities that happen in orchd. There will be a lot of changes to the values of this enum as time goes by, consider this non-exhausive and be graceful with unknown values.</summary>
        public global::Enhance.Client.Models.ActivityKind? Kind { get; set; }
        /// <summary>The message property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>The orgId property</summary>
        public Guid? OrgId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.Activity"/> and sets the default values.
        /// </summary>
        public Activity()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.Activity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.Activity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.Activity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activityObject", n => { ActivityObject = n.GetObjectValue<global::Enhance.Client.Models.ActivityObject>(global::Enhance.Client.Models.ActivityObject.CreateFromDiscriminatorValue); } },
                { "context", n => { Context = n.GetObjectValue<global::Enhance.Client.Models.ActivityContext>(global::Enhance.Client.Models.ActivityContext.CreateFromDiscriminatorValue); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "kind", n => { Kind = n.GetEnumValue<global::Enhance.Client.Models.ActivityKind>(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "orgId", n => { OrgId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Enhance.Client.Models.ActivityObject>("activityObject", ActivityObject);
            writer.WriteObjectValue<global::Enhance.Client.Models.ActivityContext>("context", Context);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteGuidValue("id", Id);
            writer.WriteEnumValue<global::Enhance.Client.Models.ActivityKind>("kind", Kind);
            writer.WriteStringValue("message", Message);
            writer.WriteGuidValue("orgId", OrgId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

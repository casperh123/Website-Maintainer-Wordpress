// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class WebsiteCloneRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The deleteFilesFromDestination property</summary>
        public bool? DeleteFilesFromDestination { get; set; }
        /// <summary>The destWebsiteId property</summary>
        public Guid? DestWebsiteId { get; set; }
        /// <summary>The excludePaths property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExcludePaths { get; set; }
#nullable restore
#else
        public List<string> ExcludePaths { get; set; }
#endif
        /// <summary>The includeDatabases property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? IncludeDatabases { get; set; }
#nullable restore
#else
        public List<string> IncludeDatabases { get; set; }
#endif
        /// <summary>The includeDatabaseUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? IncludeDatabaseUsers { get; set; }
#nullable restore
#else
        public List<string> IncludeDatabaseUsers { get; set; }
#endif
        /// <summary>The newWebsite property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Enhance.Client.Models.WebsiteCloneNewWebsite? NewWebsite { get; set; }
#nullable restore
#else
        public global::Enhance.Client.Models.WebsiteCloneNewWebsite NewWebsite { get; set; }
#endif
        /// <summary>The runWpSearchReplace property</summary>
        public bool? RunWpSearchReplace { get; set; }
        /// <summary>The sourceWebsiteId property</summary>
        public Guid? SourceWebsiteId { get; set; }
        /// <summary>The syncPhpVersion property</summary>
        public bool? SyncPhpVersion { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.WebsiteCloneRequest"/> and sets the default values.
        /// </summary>
        public WebsiteCloneRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.WebsiteCloneRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.WebsiteCloneRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.WebsiteCloneRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "deleteFilesFromDestination", n => { DeleteFilesFromDestination = n.GetBoolValue(); } },
                { "destWebsiteId", n => { DestWebsiteId = n.GetGuidValue(); } },
                { "excludePaths", n => { ExcludePaths = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "includeDatabaseUsers", n => { IncludeDatabaseUsers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "includeDatabases", n => { IncludeDatabases = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "newWebsite", n => { NewWebsite = n.GetObjectValue<global::Enhance.Client.Models.WebsiteCloneNewWebsite>(global::Enhance.Client.Models.WebsiteCloneNewWebsite.CreateFromDiscriminatorValue); } },
                { "runWpSearchReplace", n => { RunWpSearchReplace = n.GetBoolValue(); } },
                { "sourceWebsiteId", n => { SourceWebsiteId = n.GetGuidValue(); } },
                { "syncPhpVersion", n => { SyncPhpVersion = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("deleteFilesFromDestination", DeleteFilesFromDestination);
            writer.WriteGuidValue("destWebsiteId", DestWebsiteId);
            writer.WriteCollectionOfPrimitiveValues<string>("excludePaths", ExcludePaths);
            writer.WriteCollectionOfPrimitiveValues<string>("includeDatabases", IncludeDatabases);
            writer.WriteCollectionOfPrimitiveValues<string>("includeDatabaseUsers", IncludeDatabaseUsers);
            writer.WriteObjectValue<global::Enhance.Client.Models.WebsiteCloneNewWebsite>("newWebsite", NewWebsite);
            writer.WriteBoolValue("runWpSearchReplace", RunWpSearchReplace);
            writer.WriteGuidValue("sourceWebsiteId", SourceWebsiteId);
            writer.WriteBoolValue("syncPhpVersion", SyncPhpVersion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

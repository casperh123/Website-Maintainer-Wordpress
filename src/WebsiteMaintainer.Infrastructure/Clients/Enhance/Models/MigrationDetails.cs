// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class MigrationDetails : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The destServerId property</summary>
        public Guid? DestServerId { get; set; }
        /// <summary>The destServerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DestServerName { get; set; }
#nullable restore
#else
        public string DestServerName { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The lastUpdated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastUpdated { get; set; }
#nullable restore
#else
        public string LastUpdated { get; set; }
#endif
        /// <summary>The migrationStatus property</summary>
        public global::Enhance.Client.Models.MigrationStatus? MigrationStatus { get; set; }
        /// <summary>The percentageComplete property</summary>
        public int? PercentageComplete { get; set; }
        /// <summary>The serverRole property</summary>
        public global::Enhance.Client.Models.ServerRole? ServerRole { get; set; }
        /// <summary>The sessionId property</summary>
        public Guid? SessionId { get; set; }
        /// <summary>The sourceServerId property</summary>
        public Guid? SourceServerId { get; set; }
        /// <summary>The websiteId property</summary>
        public Guid? WebsiteId { get; set; }
        /// <summary>The websitePrimaryDomain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebsitePrimaryDomain { get; set; }
#nullable restore
#else
        public string WebsitePrimaryDomain { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.MigrationDetails"/> and sets the default values.
        /// </summary>
        public MigrationDetails()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.MigrationDetails"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.MigrationDetails CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.MigrationDetails();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetStringValue(); } },
                { "destServerId", n => { DestServerId = n.GetGuidValue(); } },
                { "destServerName", n => { DestServerName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "lastUpdated", n => { LastUpdated = n.GetStringValue(); } },
                { "migrationStatus", n => { MigrationStatus = n.GetEnumValue<global::Enhance.Client.Models.MigrationStatus>(); } },
                { "percentageComplete", n => { PercentageComplete = n.GetIntValue(); } },
                { "serverRole", n => { ServerRole = n.GetEnumValue<global::Enhance.Client.Models.ServerRole>(); } },
                { "sessionId", n => { SessionId = n.GetGuidValue(); } },
                { "sourceServerId", n => { SourceServerId = n.GetGuidValue(); } },
                { "websiteId", n => { WebsiteId = n.GetGuidValue(); } },
                { "websitePrimaryDomain", n => { WebsitePrimaryDomain = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("createdAt", CreatedAt);
            writer.WriteGuidValue("destServerId", DestServerId);
            writer.WriteStringValue("destServerName", DestServerName);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("lastUpdated", LastUpdated);
            writer.WriteEnumValue<global::Enhance.Client.Models.MigrationStatus>("migrationStatus", MigrationStatus);
            writer.WriteIntValue("percentageComplete", PercentageComplete);
            writer.WriteEnumValue<global::Enhance.Client.Models.ServerRole>("serverRole", ServerRole);
            writer.WriteGuidValue("sessionId", SessionId);
            writer.WriteGuidValue("sourceServerId", SourceServerId);
            writer.WriteGuidValue("websiteId", WebsiteId);
            writer.WriteStringValue("websitePrimaryDomain", WebsitePrimaryDomain);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

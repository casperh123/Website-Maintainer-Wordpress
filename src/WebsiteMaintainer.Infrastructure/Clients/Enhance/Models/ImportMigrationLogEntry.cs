// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class ImportMigrationLogEntry : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The action property</summary>
        public global::Enhance.Client.Models.LogAction? Action { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The kind property</summary>
        public global::Enhance.Client.Models.LogKind? Kind { get; set; }
        /// <summary>The level property</summary>
        public global::Enhance.Client.Models.LogLevel? Level { get; set; }
        /// <summary>The logData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogData { get; set; }
#nullable restore
#else
        public string LogData { get; set; }
#endif
        /// <summary>The migrationId property</summary>
        public Guid? MigrationId { get; set; }
        /// <summary>The percentageComplete property</summary>
        public int? PercentageComplete { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.ImportMigrationLogEntry"/> and sets the default values.
        /// </summary>
        public ImportMigrationLogEntry()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.ImportMigrationLogEntry"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.ImportMigrationLogEntry CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.ImportMigrationLogEntry();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetEnumValue<global::Enhance.Client.Models.LogAction>(); } },
                { "createdAt", n => { CreatedAt = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "kind", n => { Kind = n.GetEnumValue<global::Enhance.Client.Models.LogKind>(); } },
                { "level", n => { Level = n.GetEnumValue<global::Enhance.Client.Models.LogLevel>(); } },
                { "logData", n => { LogData = n.GetStringValue(); } },
                { "migrationId", n => { MigrationId = n.GetGuidValue(); } },
                { "percentageComplete", n => { PercentageComplete = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Enhance.Client.Models.LogAction>("action", Action);
            writer.WriteStringValue("createdAt", CreatedAt);
            writer.WriteGuidValue("id", Id);
            writer.WriteEnumValue<global::Enhance.Client.Models.LogKind>("kind", Kind);
            writer.WriteEnumValue<global::Enhance.Client.Models.LogLevel>("level", Level);
            writer.WriteStringValue("logData", LogData);
            writer.WriteGuidValue("migrationId", MigrationId);
            writer.WriteIntValue("percentageComplete", PercentageComplete);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

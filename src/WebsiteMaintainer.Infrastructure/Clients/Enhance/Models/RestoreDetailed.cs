// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class RestoreDetailed : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The backupId property</summary>
        public int? BackupId { get; set; }
        /// <summary>The emailsStatus property</summary>
        public global::Enhance.Client.Models.OperationStatus? EmailsStatus { get; set; }
        /// <summary>The finishedAt property</summary>
        public DateTimeOffset? FinishedAt { get; set; }
        /// <summary>The homeDirStatus property</summary>
        public global::Enhance.Client.Models.OperationStatus? HomeDirStatus { get; set; }
        /// <summary>The mysqlDbsStatus property</summary>
        public global::Enhance.Client.Models.OperationStatus? MysqlDbsStatus { get; set; }
        /// <summary>The startedAt property</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.RestoreDetailed"/> and sets the default values.
        /// </summary>
        public RestoreDetailed()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.RestoreDetailed"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.RestoreDetailed CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.RestoreDetailed();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "backupId", n => { BackupId = n.GetIntValue(); } },
                { "emailsStatus", n => { EmailsStatus = n.GetEnumValue<global::Enhance.Client.Models.OperationStatus>(); } },
                { "finishedAt", n => { FinishedAt = n.GetDateTimeOffsetValue(); } },
                { "homeDirStatus", n => { HomeDirStatus = n.GetEnumValue<global::Enhance.Client.Models.OperationStatus>(); } },
                { "mysqlDbsStatus", n => { MysqlDbsStatus = n.GetEnumValue<global::Enhance.Client.Models.OperationStatus>(); } },
                { "startedAt", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("backupId", BackupId);
            writer.WriteEnumValue<global::Enhance.Client.Models.OperationStatus>("emailsStatus", EmailsStatus);
            writer.WriteDateTimeOffsetValue("finishedAt", FinishedAt);
            writer.WriteEnumValue<global::Enhance.Client.Models.OperationStatus>("homeDirStatus", HomeDirStatus);
            writer.WriteEnumValue<global::Enhance.Client.Models.OperationStatus>("mysqlDbsStatus", MysqlDbsStatus);
            writer.WriteDateTimeOffsetValue("startedAt", StartedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

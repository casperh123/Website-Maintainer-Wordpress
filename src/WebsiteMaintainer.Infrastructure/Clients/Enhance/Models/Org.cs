// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class Org : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The locale property</summary>
        public global::Enhance.Client.Models.CPLocale? Locale { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The owner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Owner { get; set; }
#nullable restore
#else
        public string Owner { get; set; }
#endif
        /// <summary>The ownerAvatarPath property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OwnerAvatarPath { get; set; }
#nullable restore
#else
        public string OwnerAvatarPath { get; set; }
#endif
        /// <summary>The ownerEmail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OwnerEmail { get; set; }
#nullable restore
#else
        public string OwnerEmail { get; set; }
#endif
        /// <summary>The ownerId property</summary>
        public Guid? OwnerId { get; set; }
        /// <summary>The ownerLoginId property</summary>
        public Guid? OwnerLoginId { get; set; }
        /// <summary>The parentId property</summary>
        public Guid? ParentId { get; set; }
        /// <summary>The slackNotificationWebhookUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SlackNotificationWebhookUrl { get; set; }
#nullable restore
#else
        public string SlackNotificationWebhookUrl { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::Enhance.Client.Models.Status? Status { get; set; }
        /// <summary>The subscriptionsCount property</summary>
        public int? SubscriptionsCount { get; set; }
        /// <summary>The suspendedBy property</summary>
        public Guid? SuspendedBy { get; set; }
        /// <summary>The websitesCount property</summary>
        public int? WebsitesCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.Org"/> and sets the default values.
        /// </summary>
        public Org()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.Org"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.Org CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.Org();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "locale", n => { Locale = n.GetEnumValue<global::Enhance.Client.Models.CPLocale>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "owner", n => { Owner = n.GetStringValue(); } },
                { "ownerAvatarPath", n => { OwnerAvatarPath = n.GetStringValue(); } },
                { "ownerEmail", n => { OwnerEmail = n.GetStringValue(); } },
                { "ownerId", n => { OwnerId = n.GetGuidValue(); } },
                { "ownerLoginId", n => { OwnerLoginId = n.GetGuidValue(); } },
                { "parentId", n => { ParentId = n.GetGuidValue(); } },
                { "slackNotificationWebhookUrl", n => { SlackNotificationWebhookUrl = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Enhance.Client.Models.Status>(); } },
                { "subscriptionsCount", n => { SubscriptionsCount = n.GetIntValue(); } },
                { "suspendedBy", n => { SuspendedBy = n.GetGuidValue(); } },
                { "websitesCount", n => { WebsitesCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("createdAt", CreatedAt);
            writer.WriteGuidValue("id", Id);
            writer.WriteEnumValue<global::Enhance.Client.Models.CPLocale>("locale", Locale);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("owner", Owner);
            writer.WriteStringValue("ownerAvatarPath", OwnerAvatarPath);
            writer.WriteStringValue("ownerEmail", OwnerEmail);
            writer.WriteGuidValue("ownerId", OwnerId);
            writer.WriteGuidValue("ownerLoginId", OwnerLoginId);
            writer.WriteGuidValue("parentId", ParentId);
            writer.WriteStringValue("slackNotificationWebhookUrl", SlackNotificationWebhookUrl);
            writer.WriteEnumValue<global::Enhance.Client.Models.Status>("status", Status);
            writer.WriteIntValue("subscriptionsCount", SubscriptionsCount);
            writer.WriteGuidValue("suspendedBy", SuspendedBy);
            writer.WriteIntValue("websitesCount", WebsitesCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

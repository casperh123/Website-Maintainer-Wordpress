// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Enhance.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class NewWebsiteApp : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Sets the admin email address, required by some applications.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdminEmail { get; set; }
#nullable restore
#else
        public string AdminEmail { get; set; }
#endif
        /// <summary>Complements the admin username. Provide unhashed password.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdminPassword { get; set; }
#nullable restore
#else
        public string AdminPassword { get; set; }
#endif
        /// <summary>This username is going to be the username of the initial WP user with which the user can login to the WP admin. This is equivalent to going to `wp-admin/install.php` and performing the install from there.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdminUsername { get; set; }
#nullable restore
#else
        public string AdminUsername { get; set; }
#endif
        /// <summary>The app property</summary>
        public global::Enhance.Client.Models.WebsiteAppKind? App { get; set; }
        /// <summary>Install on a specific domain within this website.  Will default to use the primary domain.</summary>
        public Guid? DomainId { get; set; }
        /// <summary>The path property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Path { get; set; }
#nullable restore
#else
        public string Path { get; set; }
#endif
        /// <summary>The version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Models.NewWebsiteApp"/> and sets the default values.
        /// </summary>
        public NewWebsiteApp()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.NewWebsiteApp"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Enhance.Client.Models.NewWebsiteApp CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Enhance.Client.Models.NewWebsiteApp();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adminEmail", n => { AdminEmail = n.GetStringValue(); } },
                { "adminPassword", n => { AdminPassword = n.GetStringValue(); } },
                { "adminUsername", n => { AdminUsername = n.GetStringValue(); } },
                { "app", n => { App = n.GetEnumValue<global::Enhance.Client.Models.WebsiteAppKind>(); } },
                { "domainId", n => { DomainId = n.GetGuidValue(); } },
                { "path", n => { Path = n.GetStringValue(); } },
                { "version", n => { Version = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("adminEmail", AdminEmail);
            writer.WriteStringValue("adminPassword", AdminPassword);
            writer.WriteStringValue("adminUsername", AdminUsername);
            writer.WriteEnumValue<global::Enhance.Client.Models.WebsiteAppKind>("app", App);
            writer.WriteGuidValue("domainId", DomainId);
            writer.WriteStringValue("path", Path);
            writer.WriteStringValue("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

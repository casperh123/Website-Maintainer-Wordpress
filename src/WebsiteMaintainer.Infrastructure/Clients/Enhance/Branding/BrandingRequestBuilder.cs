// <auto-generated/>
#pragma warning disable CS0618
using Enhance.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Enhance.Client.Branding
{
    /// <summary>
    /// Builds and executes requests for operations under \branding
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class BrandingRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Branding.BrandingRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BrandingRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/branding{?orgId*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Enhance.Client.Branding.BrandingRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BrandingRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/branding{?orgId*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns the branding properties of an organization.This endpoint doesn&apos;t require authentication so that a loginless user may query the control panel&apos;s reseller&apos;s branding. In this case, the request&apos;s Host HTTP header will be matched against an existing reseller&apos;s control panel host, and that reseller&apos;s branding returned.To create a &quot;control panel host&quot; for the reseller, the reseller needs to create a control panel website using the website creation endpoint, specifying the control panel flag. For more details, please refer to `createWebsite`.If, however, the user is logged in, the frontend should pass the currently logged in organization&apos;s id. Based on this, this endpoint will return the branding of that organization&apos;s realm&apos;s reseller. This means that if the user is currently logged into a reseller, that reseller&apos;s id would be passed and its branding would be returned. If the user is logged into a customer organization of a reseller, this endpoint looks up the parent of that customer and returns the branding of the parent.An organization may not have any branding at all, in which case an &quot;empty branding&quot; is returned.
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Models.Branding"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Enhance.Client.Models.Branding?> GetAsync(Action<RequestConfiguration<global::Enhance.Client.Branding.BrandingRequestBuilder.BrandingRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Enhance.Client.Models.Branding> GetAsync(Action<RequestConfiguration<global::Enhance.Client.Branding.BrandingRequestBuilder.BrandingRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Enhance.Client.Models.Branding>(requestInfo, global::Enhance.Client.Models.Branding.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the branding properties of an organization.This endpoint doesn&apos;t require authentication so that a loginless user may query the control panel&apos;s reseller&apos;s branding. In this case, the request&apos;s Host HTTP header will be matched against an existing reseller&apos;s control panel host, and that reseller&apos;s branding returned.To create a &quot;control panel host&quot; for the reseller, the reseller needs to create a control panel website using the website creation endpoint, specifying the control panel flag. For more details, please refer to `createWebsite`.If, however, the user is logged in, the frontend should pass the currently logged in organization&apos;s id. Based on this, this endpoint will return the branding of that organization&apos;s realm&apos;s reseller. This means that if the user is currently logged into a reseller, that reseller&apos;s id would be passed and its branding would be returned. If the user is logged into a customer organization of a reseller, this endpoint looks up the parent of that customer and returns the branding of the parent.An organization may not have any branding at all, in which case an &quot;empty branding&quot; is returned.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Enhance.Client.Branding.BrandingRequestBuilder.BrandingRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Enhance.Client.Branding.BrandingRequestBuilder.BrandingRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Enhance.Client.Branding.BrandingRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Enhance.Client.Branding.BrandingRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Enhance.Client.Branding.BrandingRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns the branding properties of an organization.This endpoint doesn&apos;t require authentication so that a loginless user may query the control panel&apos;s reseller&apos;s branding. In this case, the request&apos;s Host HTTP header will be matched against an existing reseller&apos;s control panel host, and that reseller&apos;s branding returned.To create a &quot;control panel host&quot; for the reseller, the reseller needs to create a control panel website using the website creation endpoint, specifying the control panel flag. For more details, please refer to `createWebsite`.If, however, the user is logged in, the frontend should pass the currently logged in organization&apos;s id. Based on this, this endpoint will return the branding of that organization&apos;s realm&apos;s reseller. This means that if the user is currently logged into a reseller, that reseller&apos;s id would be passed and its branding would be returned. If the user is logged into a customer organization of a reseller, this endpoint looks up the parent of that customer and returns the branding of the parent.An organization may not have any branding at all, in which case an &quot;empty branding&quot; is returned.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
        public partial class BrandingRequestBuilderGetQueryParameters 
        {
            /// <summary>The id of the currently logged in organization.</summary>
            [QueryParameter("orgId")]
            public Guid? OrgId { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
        public partial class BrandingRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Enhance.Client.Branding.BrandingRequestBuilder.BrandingRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
